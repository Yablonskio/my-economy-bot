import fs from "fs";
import {addNewUser, foundAuthor} from "./BasicComponents.js";

async function pay(msg) {
	await fs.readFile('dataUser.json',
		function (err, data) {
		let dataWrite = JSON.parse(data)
		let member = foundAuthor(msg.author.id, dataWrite)
		if (member === false) {
			addNewUser(msg, dataWrite)
		} else {
			if (err) console.log(err)
			else {
				payWorker(msg, dataWrite, member)
			}
		}
		if (dataWrite !== Object) {
			fs.writeFile('dataUser.json', JSON.stringify(dataWrite),
				(err) => err && console.error(err))
		} else {
			console.log('CRITICAL ERROR!!!')
		}
	})
}
function payWorker(msg, dataWrite, member) {
	let walletTransWorker = msg.content.split(' ')[1].substring(2).slice(0, -1)
	let walletTrans = foundAuthor(walletTransWorker, dataWrite)
	let amountTrans = msg.content.split(' ')[2]
	if (walletTrans === false) {
		msg.channel.send('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–π –∫–æ—à–µ–ª–µ–∫ , –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –µ–≥–æ –Ω–µ —Å–æ–∑–¥–∞–ª ')
		return true
	} else if (amountTrans % 1 !== 0) {
		msg.channel.send('‚ùå –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –ª–∏—à—å —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞')
		return true
	} else if (member.money <= amountTrans) {
		msg.channel.send('‚ùå –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏ üí∏')
		return true
	}
	let tax = amountTrans / 100 * 5
	amountTrans = amountTrans - tax

	member.money = member.money - amountTrans
	walletTrans.money = walletTrans.money + amountTrans

	msg.channel.send('‚úÖ –ü–µ—Ä–µ–≤–æ–¥ —É—Å–ø–µ—à–µ–Ω!')
}
export default pay